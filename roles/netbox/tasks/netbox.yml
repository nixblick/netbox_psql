# roles/netbox/tasks/netbox.yml v1.1
---
- name: Clone NetBox repository
  ansible.builtin.git:
    repo: https://github.com/netbox-community/netbox.git
    dest: "{{ netbox_dir }}"
    version: "{{ netbox_version }}"

- name: Create Python virtual environment
  ansible.builtin.pip:
    name: virtualenv
    executable: pip3

- name: Set up Python virtual environment
  ansible.builtin.command: python3 -m venv {{ netbox_venv }}
  args:
    creates: "{{ netbox_venv }}/bin/activate"
  changed_when: true

- name: Install NetBox requirements
  ansible.builtin.pip:
    requirements: "{{ netbox_dir }}/requirements.txt"
    virtualenv: "{{ netbox_venv }}"
    virtualenv_command: python3 -m venv

- name: Set proper ownership of NetBox directory
  ansible.builtin.file:
    path: "{{ netbox_dir }}"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    recurse: true
    state: directory

- name: Generate configuration.py
  ansible.builtin.template:
    src: configuration.py.j2
    dest: "{{ netbox_dir }}/netbox/netbox/configuration.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: '0644'

- name: Add LDAP configuration if enabled
  ansible.builtin.template:
    src: ldap_config.py.j2
    dest: "{{ netbox_dir }}/netbox/netbox/ldap_config.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: '0644'
  when: netbox_use_ldap

- name: Run NetBox migrations
  ansible.builtin.become: true
  ansible.builtin.become_user: "{{ netbox_user }}"
  ansible.builtin.command: "{{ netbox_venv }}/bin/python3 {{ netbox_dir }}/netbox/manage.py migrate"
  args:
    chdir: "{{ netbox_dir }}/netbox"
  changed_when: true

- name: Create NetBox superuser
  ansible.builtin.become: true
  ansible.builtin.become_user: "{{ netbox_user }}"
  ansible.builtin.command: "{{ netbox_venv }}/bin/python3 {{ netbox_dir }}/netbox/manage.py createsuperuser --noinput"
  environment:
    DJANGO_SUPERUSER_PASSWORD: "admin"
    DJANGO_SUPERUSER_USERNAME: "admin"
    DJANGO_SUPERUSER_EMAIL: "admin@example.com"
  register: create_admin
  ignore_errors: true
  tags:
    - never
    - create_admin
  changed_when: create_admin.rc == 0

- name: Collect static files
  ansible.builtin.become: true
  ansible.builtin.become_user: "{{ netbox_user }}"
  ansible.builtin.command: "{{ netbox_venv }}/bin/python3 {{ netbox_dir }}/netbox/manage.py collectstatic --no-input"
  args:
    chdir: "{{ netbox_dir }}/netbox"
  changed_when: true