# roles/netbox/templates/ldap_config.py.j2 v1.0
# {{ ansible_managed }}
# LDAP configuration file
import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType

# LDAP server URI
AUTH_LDAP_SERVER_URI = "ldap://{{ netbox_ldap_server }}"

# The following may be needed if you are binding to Active Directory.
AUTH_LDAP_CONNECTION_OPTIONS = {
    ldap.OPT_REFERRALS: 0
}

# Set the DN and password for the NetBox service account.
AUTH_LDAP_BIND_DN = "{{ netbox_ldap_bind_dn }}"
AUTH_LDAP_BIND_PASSWORD = "{{ netbox_ldap_bind_password }}"

# Include this setting if you want to ignore certificate errors. This might be needed to accept a self-signed cert.
# Note that this is a NetBox-specific setting which sets:
#     ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
LDAP_IGNORE_CERT_ERRORS = True

# Search for users in the specified OU
AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=users,dc=example,dc=com",
                                   ldap.SCOPE_SUBTREE,
                                   "(sAMAccountName=%(user)s)")

# Populate the Django user from the LDAP directory.
AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail"
}

# Map LDAP groups to Django groups
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("ou=groups,dc=example,dc=com",
                                    ldap.SCOPE_SUBTREE,
                                    "(objectClass=group)")
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()

# Define group mappings
AUTH_LDAP_FIND_GROUP_PERMS = True
AUTH_LDAP_MIRROR_GROUPS = True

# For group membership, define a group required to login
AUTH_LDAP_REQUIRE_GROUP = "cn=netbox-users,ou=groups,dc=example,dc=com"

# Define special user types from LDAP groups
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_active": "cn=netbox-users,ou=groups,dc=example,dc=com",
    "is_staff": "cn=netbox-admins,ou=groups,dc=example,dc=com",
    "is_superuser": "cn=netbox-superusers,ou=groups,dc=example,dc=com"
}